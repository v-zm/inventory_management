plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("kotlin-parcelize")
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.vivek.inventorymanagement"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        androidTest.assets.srcDirs+=files("$projectDir/schemas")
        debug.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    ksp {
        arg("writeComment", "true")
        arg("defaultComment", "It is the default comment!")
    }
}

dependencies {

    def room_version = "2.5.0"
    def mockitoVersion = "5.1.1"
    def mockitoKotlinVersion = "4.1.0"
    def coroutineKotlinxVersion = "1.4.0"
    def instrumentedJUnitVersion = "1.1.1"
    def jUnitExtensionVersion = "1.1.5"
    def jUnitVersion = "4.13.2"
    def expressoCoreVersion = "3.5.1"
    def archCoreTestVersion = "2.1.0"
    def androidXtestVersion = "1.5.0"
    def mockkVersion = "1.13.4"
    def androidXTestExtKotlinRunnerVersion = "1.1.5"
    def androidXTestCoreVersion = "1.5.0"
    def androidXRoboElectricVersion = "4.9"
    def lottieVersion = "3.4.0"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation group: 'com.squareup.retrofit2', name: 'converter-jackson', version: '2.9.0'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.activity:activity-ktx:1.6.1'
    // is to add the dependency on Fragment
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    // is to add the dependency on Activity
    implementation 'androidx.activity:activity-ktx:1.1.0'
    // to display images
    implementation "io.coil-kt:coil:1.1.1"
    // to implement Room DB
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    //Hilt for dependency injection
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    implementation 'com.google.devtools.ksp:symbol-processing-api:1.8.0-1.0.8'

    // Test dependencies
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreTestVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineKotlinxVersion"
    testImplementation "androidx.test.ext:junit-ktx:$jUnitExtensionVersion"
    testImplementation "junit:junit:$jUnitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expressoCoreVersion"
    testImplementation "androidx.test:core:$androidXtestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.robolectric:robolectric:$androidXRoboElectricVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.room:room-testing:$room_version"


    androidTestImplementation "androidx.test.ext:junit:$instrumentedJUnitVersion"
    androidTestImplementation "androidx.test:core:$androidXtestVersion"
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "androidx.fragment:fragment-testing:1.5.0"

    implementation "com.airbnb.android:lottie:$lottieVersion"

    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

}
kapt {
    correctErrorTypes true
}
ksp{
    arg(new RoomSchemaArgProvider(new File(projectDir,"schemas")))
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KSP, you should change the line below to return
        // ["room.schemaLocation=${schemaDir.path}"]
        return ["-Aroom.schemaLocation=${schemaDir.path}"]
    }
}